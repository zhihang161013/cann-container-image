name: Main (Build/Publish)

on:
  workflow_call:
    inputs:
      target_name:
        description: 'name of the build target'
        required: true
        type: string
      context:
        description: 'path to the build context'
        required: true
        type: string
      dockerfile:
        description: 'file name of the Dockerfile'
        required: true
        type: string
      repos:
        description: 'name of the repositories'
        required: true
        type: string
      common_registry_tags:
        description: 'tags of the common registry'
        required: true
        type: string
      event_name:
        description: 'name of the event that triggered the workflow'
        required: true
        type: string

    secrets:
      DOCKER_USERNAME:
        description: 'Username of the DockerHub registry'
        required: true
      DOCKER_TOKEN:
        description: 'Token of the DockerHub registry'
        required: true
jobs:
  build-cann:
    runs-on: ${{ matrix.runner }}
    strategy:
        matrix:
          include:
            - arch: x86_64
              runner: ubuntu-latest
            - arch: aarch64
              runner: ubuntu-22.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push by digest
        uses: docker/build-push-action@v6
        id: build
        with: 
          platforms: ${{ matrix.arch }}
          tags: ${{ inputs.repos }}
          file: ${{ github.workspace }}/${{ inputs.context }}/${{ inputs.dockerfile }}
          context: ${{ github.workspace }}/${{ inputs.context }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ inputs.target_name }}-${{ matrix.arch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  push-cann:
    runs-on: ubuntu-latest
    needs: build-cann
    if: inputs.event_name == 'release'
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ inputs.target_name }}-*
          merge-multiple: true

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          TAGS_ARRAY=($(echo "${{ inputs.common_registry_tags }}" | sed '/^$/d'))
          for TAG in "${TAGS_ARRAY[@]}"; do
            if [[ "$TAG" == *"docker.io/zhihang161013/cann"* ]]; then
              docker buildx imagetools create -t "$TAG" \
                $(printf 'docker.io/zhihang161013/cann@sha256:%s ' *)
            else
              echo "Error: Unknown registry in TAG: $TAG"
              exit 1
            fi
          done
      

